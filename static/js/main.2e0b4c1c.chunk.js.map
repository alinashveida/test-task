{"version":3,"sources":["components/ProjectList/ProjectList.module.scss","components/SearchInput/SearchInput.module.scss","components/ButtonSearch/ButtonSearch.module.scss","components/SearchInput/SearchInput.jsx","components/ButtonSearch/ButtonSearch.jsx","components/ProjectList/ProjectList.jsx","App.js","index.js"],"names":["module","exports","SearchInput","value","setValue","className","styled","label","searchInput","type","placeholder","onChange","e","target","console","log","ButtonSearch","button","icon","ProjectList","projectNames","useState","active","setActive","projectNamesLength","length","map","project","listItem","projectWrapper","itemPercentage","percentage","projectName","name","projectInfoWrapper","projectInfo","description","buttonInfo","id","onClick","hidden","tasks","task","tasksListItem","done","tasksItemPercentage","taskDone","taskName","taskDate","date","messageNotFound","App","normalizedValue","toLowerCase","foundProjectNames","allProjectNames","filter","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e0b4c1c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ProjectList_listItem__250oG\",\"projectName\":\"ProjectList_projectName__37iTQ\",\"itemPercentage\":\"ProjectList_itemPercentage__3Ky7H\",\"messageNotFound\":\"ProjectList_messageNotFound__231-s\",\"hidden\":\"ProjectList_hidden__wVCug\",\"active\":\"ProjectList_active__1rz89\",\"projectInfo\":\"ProjectList_projectInfo__HXx3X\",\"buttonInfo\":\"ProjectList_buttonInfo__1Nr2-\",\"tasksListItem\":\"ProjectList_tasksListItem__at-QH\",\"tasksItemPercentage\":\"ProjectList_tasksItemPercentage__10OAA\",\"taskName\":\"ProjectList_taskName__2mnom\",\"projectWrapper\":\"ProjectList_projectWrapper__272Y_\",\"projectInfoWrapper\":\"ProjectList_projectInfoWrapper__2CqFv\",\"done\":\"ProjectList_done__3T6s7\",\"taskDone\":\"ProjectList_taskDone__3hsg4\",\"taskDate\":\"ProjectList_taskDate__2G_gn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchInput_searchInput__AWjro\",\"label\":\"SearchInput_label__WpBl9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"ButtonSearch_icon__3CRKa\",\"button\":\"ButtonSearch_button__3zV1v\"};","import styled from './SearchInput.module.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function SearchInput({ value, setValue }) {\r\n  const changeSearch = (e) => {\r\n    setValue(e.target.value)\r\n    console.log(value)\r\n  }\r\n  return (\r\n    <>\r\n      <label className={styled.label}>\r\n        <input\r\n          className={styled.searchInput}\r\n          type=\"search\"\r\n          value={value}\r\n          placeholder=\"Search a Project with Name, Task, User...\"\r\n          onChange={changeSearch}\r\n        ></input>\r\n      </label>\r\n    </>\r\n  )\r\n}\r\n\r\nSearchInput.propTypes = {\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func,\r\n}\r\n","import styled from './ButtonSearch.module.scss'\r\n\r\nimport { AiOutlineSearch } from 'react-icons/ai'\r\n\r\nexport default function ButtonSearch() {\r\n  return (\r\n    <button className={styled.button}>\r\n      <AiOutlineSearch className={styled.icon} />\r\n    </button>\r\n  )\r\n}\r\n","import styled from './ProjectList.module.scss'\r\nimport { useState } from 'react'\r\nimport ButtonSearch from '../ButtonSearch/ButtonSearch'\r\nimport { BsChevronDown, BsChevronUp } from 'react-icons/bs'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function ProjectList({ projectNames }) {\r\n  const [active, setActive] = useState({})\r\n\r\n  function handleCollapse(id) {\r\n    setActive({\r\n      ...active,\r\n      [id]: !active[id],\r\n    })\r\n  }\r\n\r\n  const projectNamesLength = projectNames.length\r\n\r\n  return (\r\n    <ul>\r\n      {!projectNamesLength ? (\r\n        <div className={styled.messageNotFound}>Project not found</div>\r\n      ) : (\r\n        <>\r\n          {projectNames.map((project) => (\r\n            <li key={project.id}>\r\n              <div className={styled.listItem}>\r\n                <div className={styled.projectWrapper}>\r\n                  <span className={styled.itemPercentage}>\r\n                    {project.percentage}\r\n                    <span>%</span>\r\n                  </span>{' '}\r\n                  <p className={styled.projectName}>{project.name}</p>\r\n                </div>\r\n                <div className={styled.projectInfoWrapper}>\r\n                  <span className={styled.projectInfo}>\r\n                    {project.description}\r\n                  </span>\r\n                  <ButtonSearch />\r\n                  <button\r\n                    className={styled.buttonInfo}\r\n                    id={project.id}\r\n                    onClick={() => handleCollapse(project.id)}\r\n                  >\r\n                    {active[project.id] ? (\r\n                      <BsChevronUp id={project.id} />\r\n                    ) : (\r\n                      <BsChevronDown id={project.id} />\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <ul\r\n                className={active[project.id] ? styled.active : styled.hidden}\r\n              >\r\n                {' '}\r\n                {project.tasks.map((task) => (\r\n                  <li key={task.id} className={styled.tasksListItem}>\r\n                    <div className={styled.projectWrapper}>\r\n                      <span\r\n                        className={\r\n                          task.percentage === 100\r\n                            ? styled.done\r\n                            : styled.tasksItemPercentage\r\n                        }\r\n                      >\r\n                        {task.percentage === 100 ? 'READY' : task.percentage}\r\n                        <span\r\n                          className={\r\n                            task.percentage === 100 ? styled.hidden : null\r\n                          }\r\n                        >\r\n                          %\r\n                        </span>\r\n                      </span>\r\n                      <p\r\n                        className={\r\n                          task.percentage === 100\r\n                            ? styled.taskDone\r\n                            : styled.taskName\r\n                        }\r\n                      >\r\n                        {task.name}\r\n                      </p>\r\n                    </div>\r\n                    <div className={styled.projectInfoWrapper}>\r\n                      <p className={styled.taskDate}>{task.date}</p>\r\n                      <ButtonSearch />\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </li>\r\n          ))}{' '}\r\n        </>\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nProjectList.propTypes = {\r\n  projectNames: PropTypes.array,\r\n}\r\n","import './App.css'\nimport { useState } from 'react'\nimport SearchInput from './components/SearchInput/SearchInput'\nimport ProjectList from './components/ProjectList/ProjectList'\nimport allProjectNames from './components/Data/ProjectList.json'\n\nfunction App() {\n  const [value, setValue] = useState('')\n\n  const normalizedValue = value.toLowerCase()\n\n  const foundProjectNames = allProjectNames.filter((project) =>\n    project.name.toLowerCase().includes(normalizedValue),\n  )\n\n  return (\n    <div className=\"App\">\n      <SearchInput value={value} setValue={setValue} />\n      <ProjectList projectNames={foundProjectNames} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}